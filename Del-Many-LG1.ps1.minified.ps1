${Del-Many-LG1.ps1} = {function Del-Many{param([Parameter(Mandatory=$true)][AllowNull()][AllowEmptystring()][string]$basefld,[Parameter(Mandatory=$true)][AllowNull()][AllowEmptyString()][string]$name,[Parameter(Mandatory=$false)][string]$extension,[Parameter(Mandatory=$false)][switch]$usePartial,[Parameter(Mandatory=$false)][switch]$useFile)$tobeDel=@();$outpufiles=@();$basefld=$basefld-replace".\*.[a-zA-Z]+",".\"-replace"..",".";if(($basefld-eq$null)-or($basefld-eq'')){$basefld='.\'};if(($extension-eq$null)-or($extension-eq'')){$extension='txt'};$extstr=$extension;$extension='*.{0}'-f$extension;if(-not $useFile){$dirCont=(Get-ChildItem $basefld -Recurse -Directory)}else{$dirCont=(Get-ChildItem $basefld$extension -Recurse)};if($usePartial){$dirCont|? {$_.Name-match$($name)}|Select Name,LastWriteTime,FullName|% {$tobeDel+=$_}}else{$dirCont|? {$_.Name-eq$($name)+".$extstr"}|Select Name,LastWriteTime,FullName|% {$tobeDel+=$_}};Write-Host "" `r`n;Write-Host "Similar file names to delete:".toUpper();$tobeDel|Format-Table -AutoSize;$confirmdel=Read-Host "Enter confirmation for deletion Y/N";if($confirmdel-eq"Y"){$tobeDel|% {rm $_.FullName;Write-Host $_.FullName "- Deleted..."}}else{Write-Host "Exiting..";continue}}}
